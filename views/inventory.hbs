<!-- Inventory -->
<!DOCTYPE html>
<html>
    <head>
        <title>Stock Inventory</title>
        <!-- Bootstrap -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
        
        <script src="https://code.jquery.com/jquery-3.5.1.js" integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>

        <!-- CSS -->
        <link rel="stylesheet" href="/css/inventory.css">

    	<!-- Fonts-->
	    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">   

        <!-- JavaScript -->
        <script src="/js/inventory.js" type="text/javascript"></script>
        <script src="/js/validator.min.js" type="text/javascript"></script>
    </head>


    <body>
        <div class="margin">
            <div class="row">
                <div class="col-2">
                    <div class="sidenav sticky">
                        <div class="nav flex-column nav-pills" aria-orientation="vertical">
                            <a class="nav-link sideBarOptions" href="/home" ><h3><font face="headerFont"><b>SioPau</b></h3></font></h3></a>
                            <a class="nav-link sideBarOptions" href="/orders">Orders</a>
                            <a class="nav-link active sideBarOptions" href="/inventory">Stock Inventory</a>
                            <a class="nav-link sideBarOptions" href="/contacts">Contacts</a>
                            <hr>
                            <a class="nav-link sideBarOptions" href="/settings">Settings</a>
                            <a class="nav-link sideBarOptions" href="/user/logout">Log Out</a>
                        </div>
                    </div>
                </div>                    
            <div class="col-10 card border-0 main">
                    <div class="card-body">
                        <div class="tab-content" id="v-pills-tabContent">
                            <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">
                                <h1><b>Stock Inventory</b></h1>
                                <p id="p1">This page contains the available products in the inventory.</p>
    
                                <!-- for search and add order button -->
                                <div class="row">
                                    <div class="col-1">
                                            <div class="dropdown">
                                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Sort by</button>
                                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <a class="dropdown-item" href="#" onclick="sortTableAlphabetical()">Name (A-Z)</a>
                                                    <a class="dropdown-item" href="#" onclick="sortTableAlphabeticalDesc()">Name (A-Z)</a>
                                                    <a class="dropdown-item" href="#" onclick="sortTablePrice()">Price (Asc.)</a>
                                                    <a class="dropdown-item" href="#" onclick="sortTablePriceDesc()">Price (Desc.)</a>
                                                    <a class="dropdown-item" href="#" onclick="sortTableStockQuantity()">Stock (Asc.)</a>
                                                    <a class="dropdown-item" href="#" onclick="sortTableStockQuantityDesc()">Stock (Desc.)</a>
                                                </div>
                                            </div>
                                    </div>
                                    <div class="col-7">
                                    </div>
                                    <div class="col-4">
                                        <div class="row">
                                            <!-- search bar-->
                                            <div class="col-7">
                                                <div class="input-group">
                                                    <input type="text" class="form-control" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2" id="myInput" onkeyup="liveSearch()">
                                                </div>
                                            </div>

                                            <!-- add stock -->
                                            <div class="col-5">
											    <button class="btn btn-light float-right btn-outline-secondary" data-toggle="modal" data-target="#addProduct" type="submit" style="margin-bottom: 5px;">Add Product</button>
									    	</div>
                                        </div>
                                    </div>
                                </div>
                                        
                                <!-- Table of Inventory -->
                                <div class="card">
                                    <table class="table table-hover" id="productTable">
                                        <thead>
                                            <tr>
                                                <th scope="col">Name </th>
                                                <th scope="col">Amount per Pack</th>
                                                <th scope="col">Stock Quantity</th>
                                                <th scope="col">Price per Pack</th>
                                                <th scope="col">Low Stock Quantity</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tbody">
                                            {{#each products}}
                                                
                                                {{> productRow pitemID=_id pname=name pamountPerPack=amountPerPack pquantity=quantity pprice=price plowStockQuantity=lowStockQuantity}}
                                                
                                                <!-- Modal for Deleting Product -->
                                                <div class="modal fade" id="deleteProduct-{{_id}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                                                    aria-hidden="true">
                                                    <div class="modal-dialog" role="document">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h5 class="modal-title">Product Deletion for {{name}}</h5>
                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                            <div class="modal-body">
                                                                <p>Are you sure you want to delete this item?</p>
                                                                <input type="text"  class="form-control validate deleteConfirmation" placeholder="CONFIRM">
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-danger name" id="deleteButton" name="{{name}}">Yes</button>
                                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                {{> productModal itemID=_id name=name amountPerPack=amountPerPack quantity=quantity price=price lowStockQuantity=lowStockQuantity}}
                                                <!-- Modal for Products -->
                                               

                                                {{!-- <div class="modal fade" id="delete{{itemID}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                    <div class="modal-dialog" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                        <h5 class="modal-title">Delete Product</h5>
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                        </div>
                                                        <div class="modal-body">
                                                        <p>Are you sure you want to delete this product?</p>
                                                        <input type="text" id="confirmation" class="form-control validate" placeholder="CONFIRM">
                                                        </div>
                                                        <div class="modal-footer">
                                                        <button type="button" class="btn btn-danger" id="deleteProductButton">Yes</button>
                                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                        </div>
                                                    </div>
                                                    </div>
                                                </div> --}}
                                                <!-- end -->

                                                <div class="modal fade" id="deleteProduct-{{_id}}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                                                    aria-hidden="true">
                                                    <div class="modal-dialog" role="document">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h5 class="modal-title">Product Deletion {{name}}</h5>
                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                            <div class="modal-body">
                                                                <p>Are you sure you want to delete this item?</p>
                                                                <input type="text" class="form-control validate" placeholder="CONFIRM">
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-danger" id="deleteProductButton">Yes</button>
                                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            {{/each}}
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Modal For Adding Product -->
                                <div id="addProduct" class="modal fade" role="dialog">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <form method="POST">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="exampleModalLabel">New Stock Product</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                
                                                <div class="modal-body">
                                                    
                                                    <div class="md-form mb-4">
                                                        <label data-error="wrong" data-success="right" for="defaultForm-pass">Name</label>
                                                        <input type="text" id="name" name="name" class="form-control validate">
                                                        <p class="error" id="nameError"></p>
                                                    </div>    

                                                    <div class="md-form mb-4">
                                                        <label data-error="wrong" data-success="right" for="defaultForm-pass">Amount per Pack</label>
                                                        <input type="number" id="amountPerPack" name="amountPerPack" class="form-control validate" min="0"/>
                                                        <p class="error" id="amountPerPackError"></p>
                                                    </div>

                                                    <div class="md-form mb-4">
                                                        <label data-error="wrong" data-success="right" for="defaultForm-pass">Stock Quantity</label>
                                                        <input type="number" id="stockQuantity" name="stockQuantity" class="form-control validate" min="0"/>
                                                        <p class="error" id="quantityError"></p>
                                                    </div>

                                                    <div class="md-form mb-4">
                                                        <label data-error="wrong" data-success="right" for="defaultForm-pass">Price per Pack</label>
                                                        <input type="number" id="pricePerPack" name="pricePerPack" class="form-control validate" min="0"/>
                                                        <p class="error" id="pricePerPackError"></p>
                                                    </div>

                                                    <div class="md-form mb-4">
                                                        <label data-error="wrong" data-success="right" for="defaultForm-pass">Low Stock Quantity</label>
                                                        <input type="number" id="lowStockQuantity" name="lowStockQuantity" class="form-control validate" min="0"/>
                                                        <p class="error" id="lowStockQuantityError"></p>
                                                    </div>
                                                    <p class="error" id="uniqueError"></p>
                                                </div>
                                                
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                    <button type="button" class="btn btn-primary" id="addProductButton">Add Product</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Modal for Deleting Product -->
                               

                                
                            </div>
                        </div>
                    </div>
                    
            </div>
        </div>


        <script>


            /* validators */

            function isFilledUpdate(itemID) {
                var valid = true
                var stock = validator.trim($("#stockQuantity-" + itemID).val());
                var price = validator.trim($("#pricePerPack-" + itemID).val());
                var low = validator.trim($("#lowStock-" + itemID).val());

                if (validator.isEmpty(stock)) {
                    $("#stockQuantity-" + itemID).css("border-color", "red");
                    valid = false
                }

                if (validator.isEmpty(price)) {
                    $("#pricePerPack-" + itemID).css("border-color", "red");
                    valid = false
                }
               
                if (validator.isEmpty(low)) {
                    $("#lowStock-" + itemID).css("border-color", "red");
                    valid = false
                }

                return valid;
            }

            function isValid(itemID) {
                var valid = true
                var stock = validator.trim($("#stockQuantity-" + itemID).val());
                var price = validator.trim($("#pricePerPack-" + itemID).val());
                var low = validator.trim($("#lowStock-" + itemID).val());

                if (stock < 1) {
                    $("#stockQuantity-" + itemID).css("border-color", "red");
                    valid = false
                }

                if (price < 1) {
                    $("#pricePerPack-" + itemID).css("border-color", "red");
                    valid = false
                }
               
                if (low < 1) {
                    $("#lowStock-" + itemID).css("border-color", "red");
                    valid = false
                }

                return valid;
            }

            function saveChanges(itemID) {
                var labelName = $('#productName-' + itemID);
                var pname = labelName.attr('value');
                var labelAmt = $('#amountPerPack-' + itemID);
                var amt = labelAmt.attr('value');
                var stock = $("#stockQuantity-" + itemID).val();
                var price = $("#pricePerPack-" + itemID).val();
                var low = $("#lowStock-" + itemID).val();

                if(!isFilledUpdate(itemID)) {
                    $("#errorUpdate-" + itemID).text("Properly fill out all fields.");
                }
                else if (!isValid(itemID)) {
                    $("#errorUpdate-" + itemID).text("Input should be a positive integer and not empty.");
                }
                else {  
                    $.post('/updateProd',{name: pname, amountPerPack: amt, quantity: stock, price: price, lowstockQuantity: low}, function(data, status) {
                        setTimeout(function() {
                            window.location.reload();
                        }, 500);
                    })
                }
            }

            function deleteProduct(itemID) {
                
            }

            //NESTED DROPDOWN
            $('.dropdown-menu a.dropdown-toggle').on('click', function(e) {
                if (!$(this).next().hasClass('show')) {
                    $(this).parents('.dropdown-menu').first().find('.show').removeClass('show');
                }
                var $subMenu = $(this).next('.dropdown-menu');
                $subMenu.toggleClass('show');


                $(this).parents('li.nav-item.dropdown.show').on('hidden.bs.dropdown', function(e) {
                    $('.dropdown-submenu .show').removeClass('show');
                });

                return false;
            });

            $(".dropdown-menu a").click(function(){
                $(this).parents(".dropdown").find('.btn').html($(this).text() + ' <span class="caret"></span>');
                $(this).parents(".dropdown").find('.btn').val($(this).data('value'));
            });

            /* Sort by Name Alphabetical (A-Z)*/
            function sortTableAlphabetical() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("productTable");
            switching = true;
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[0];
                    y = rows[i + 1].getElementsByTagName("TD")[0];
                    //check if the two rows should switch place:
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            /* Sort by Name Alphabetical (Z-A) */
            function sortTableAlphabeticalDesc() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("productTable");
            switching = true;
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[0];
                    y = rows[i + 1].getElementsByTagName("TD")[0];
                    //check if the two rows should switch place:
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            /* Sort by Price Ascending */
            function sortTablePrice() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("productTable");
            switching = true;
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[3];
                    y = rows[i + 1].getElementsByTagName("TD")[3];
                    //check if the two rows should switch place:
                    if (Number(x.innerHTML) > Number(y.innerHTML)) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            /* Sort by Price Ascending Desc.*/
            function sortTablePriceDesc() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("productTable");
            switching = true;
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[3];
                    y = rows[i + 1].getElementsByTagName("TD")[3];
                    //check if the two rows should switch place:
                    if (Number(x.innerHTML) < Number(y.innerHTML)) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            /* Sort by Stock Quantity Ascending */
            function sortTableStockQuantity() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("productTable");
            switching = true;
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[2];
                    y = rows[i + 1].getElementsByTagName("TD")[2];
                    //check if the two rows should switch place:
                    if (Number(x.innerHTML) > Number(y.innerHTML)) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            /* Sort by Stock Quantity Ascending Desc.*/
            function sortTableStockQuantityDesc() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("productTable");
            switching = true;
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[2];
                    y = rows[i + 1].getElementsByTagName("TD")[2];
                    //check if the two rows should switch place:
                    if (Number(x.innerHTML) < Number(y.innerHTML)) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                    }
                }
            }

            function liveSearch() {
                // Declare variables
                var input, filter, table, tr, td, i, txtValue;
                input = document.getElementById("myInput");
                filter = input.value.toUpperCase();
                table = document.getElementById("productTable");
                tr = table.getElementsByTagName("tr");

                // Loop through all table rows, and hide those who don't match the search query
                for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            }
        </script>

        <!-- JS-->
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        
    </body>
</html>